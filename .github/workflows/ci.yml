name: Build
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Show java version
        run: java -version
      - name: Validate checksum gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Gradle cache wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper
      - name: Build mobilecore.aar
        run: |
          mkdir -p ../tmp-go
          pushd ../tmp-go
          if [ ! -e golang ]; then
            wget -O go.tar.gz -- https://dl.google.com/go/go1.16.7.linux-amd64.tar.gz
            printf '349f846599ca816f95f57adc41f789fdd6ade0ffcd325076de4fc3dcf06c72ae1474170ed5760e505a54a3ab10b1aa65d127f14a63cba27dec6672a1bcd2fbc6  go.tar.gz\n' | sha512sum -c
            tar xzf go.tar.gz
            mv go golang
          fi
          export GOPATH="$PWD"
          export GO_LANG="$PWD/golang/bin"
          export GO_COMPILED="$PWD/bin"
          export PATH="$GO_LANG:$GO_COMPILED:$PATH"
          popd
          cd mobilecore-src
          go get golang.org/x/mobile/cmd/gomobile
          go get golang.org/x/mobile/cmd/gobind@latest
          gomobile init
          gomobile bind -target android -o mobilecore.aar github.com/minvws/nl-covid19-coronacheck-mobile-core
          cd ..
          cp mobilecore-src/mobilecore.aar mobilecore/
      - name: Build holder
        run: cd holder && ../gradlew assembleProdRelease
      - name: Build verifier
        run: cd verifier && ../gradlew assembleProdRelease
      - uses: actions/upload-artifact@v2
        with:
          name: apks
          path: |
            holder/build/outputs/apk/prod/release/holder-*.apk
            verifier/build/outputs/apk/prod/release/verifier-*.apk
